import json
import requests
import bs4
import re
from lxml import etree
import json
import sys
import time
from log import Log
#从kuaidaili获取代理并存储为proxy.json

class GetProxy(object):
    def __init__(self,url,filename):
        self.__proxy_url=url
        self.__filename=filename
        self.__page="pageNum.txt"
        self.__max_page=10
        sys.stdout = open("log.txt", "a")


    def __get_html_byte(self,num):
        response = requests.get(self.__proxy_url+str(num))
        return response


    def __get_html_text(self,num):
        response = requests.get(self.__proxy_url+str(num))
        print(Log.log_str("get html text of",num))
        return response.text

    def __build_selector(self,num):
        selector = etree.HTML(self.__get_html_text(num))
        return selector

    def __get_page_num(self):
        with open(self.__page,'r') as f:
            a=int(f.read())
        return a

    def __write_page_num(self,num):
        with open(self.__page,'w') as f:
            print(Log.log_str("write page num", num))
            f.write(str(num))


    def get_ips_ports(self,num):
        """

        :return: list[str]
        """
        selector=self.__build_selector(num)
        ips = selector.xpath('//td[@data-title="IP"]/text()')
        ports = selector.xpath('//td[@data-title="PORT"]/text()')
        res=[]
        if (len(ips) != len(ports)):
            print("ips' length is not equal to posts' length")
        else:
            for i in range(len(ips)):
                a = ips[i] + ":" + ports[i]
                res.append(a)
        return res

    def write(self):
        """
        向filename中写入proxy
        :return:
        """
        num=self.__get_page_num()
        while(num<self.__max_page):
            num+=1
            ip_ports=self.get_ips_ports(num)

            with open(self.__filename,'a') as f:
                for i in ip_ports:
                    f.write(i+'\n')
            print(Log.log_str("write proxy", num))
            a=self.__get_page_num()
            a+=1
            self.__write_page_num(a)


    def refresh(self):
        """
        将pageNum设为1
        清空filename文件
        重新write
        :return:
        """
        self.__write_page_num(1)
        with open(self.__filename,'w') as f:
            f.truncate()
        print(Log.log_str("refresh",'\n',"-------------------------------------------"))
        self.write()





gp=GetProxy("http://www.kuaidaili.com/proxylist/",'proxy.txt')
gp.refresh()

